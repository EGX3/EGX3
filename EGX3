if game.PlaceId == 3101667897 then local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/SleepyThug/SleepyCode/main/Code"))() local Window = Library.CreateLib("EGX3 AUTO FARM", "Sentinel") local Main = Window:NewTab("Main") local MainSection = Main:NewSection("Main") MainSection:NewToggle("Auto farm levels", "Levels up", function(v) getgenv().levelfarm = v while true do if not getgenv().levelfarm then return end for _,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do if v:FindFirstChild("ninjitsuGain") then game.Players.LocalPlayer.Character.Humanoid:EquipTool(v) break end end local args = { [1] = "collectOrb", [2] = "Red Orb", [3] = "City" } game:GetService("ReplicatedStorage").rEvents.orbEvent:FireServer(unpack(args))  local A_1 = "rebirthRequest" local Event = game:GetService("ReplicatedStorage").rEvents.rebirthEvent Event:FireServer(A_1) wait(0) end end) MainSection:NewToggle("Auto buy pets", "Get's pets", function(v) getgenv().petfarm = v while true do if not getgenv().petfarm then return end local A_1 = "Auto buy pets" local args = { [1] = "openCrystal", [2] = "Electro Legends Crystal" } game:GetService("ReplicatedStorage").rEvents.openCrystalRemote:InvokeServer(unpack(args)) wait(0) end end) MainSection:NewToggle("Auto farm diamonds", "Get's diamonds", function(v) getgenv().diamondfarm = v while true do if not getgenv().diamondfarm then return end local A_1 = "AUTO FARM DIAMONDS" local args = { [1] = "collectOrb", [2] = "Gem", [3] = "City" } game:GetService("ReplicatedStorage").rEvents.orbEvent:FireServer(unpack(args)) wait(0) end end) MainSection:NewToggle("Auto farm all", "Does everything", function(v) getgenv().allfarm = v while true do if not getgenv().allfarm then return end local A_1 = "Auto farm all" local args = { [1] = "collectOrb", [2] = "Gem", [3] = "City" } game:GetService("ReplicatedStorage").rEvents.orbEvent:FireServer(unpack(args)) local args = { [1] = "collectOrb",[2] = "Orange Orb", [3] = "City" } game:GetService("ReplicatedStorage").rEvents.orbEvent:FireServer(unpack(args)) local args = { [1] = "collectOrb", [2] = "Yellow Orb", [3] = "City" } game:GetService("ReplicatedStorage").rEvents.orbEvent:FireServer(unpack(args)) local args = { [1] = "collectOrb", [2] = "Red Orb", [3] = "City" } game:GetService("ReplicatedStorage").rEvents.orbEvent:FireServer(unpack(args)) local A_1 = "rebirthRequest" local Event = game:GetService("ReplicatedStorage").rEvents.rebirthEvent Event:FireServer(A_1) wait(0) end end) elseif game.PlaceId == 3956818381 then local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))() local Window = Library.CreateLib("EGX3 AUTO FARM", "Sentinel") local Main = Window:NewTab("Main") local MainSection = Main:NewSection("Main") MainSection:NewToggle("Auto Swing", "Make your player autoswing", function(v) getgenv().autoswing = v while true do if not getgenv().autoswing then return end for _,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do if v:FindFirstChild("ninjitsuGain") then game.Players.LocalPlayer.Character.Humanoid:EquipTool(v) break end end local A_1 = "swingKatana" local Event = game:GetService("Players").LocalPlayer.ninjaEvent Event:FireServer(A_1) wait() end end) MainSection:NewToggle("Auto Sell", "Makes your player autosell", function(v) getgenv().autosell = v while true do if getgenv().autoswing == false then return end game:GetService("Workspace").sellAreaCircles["sellAreaCircle16"].circleInner.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame wait(0.1) game:GetService("Workspace").sellAreaCircles["sellAreaCircle16"].circleInner.CFrame = CFrame.new(0,0,0) wait(0.1) end end) MainSection:NewButton("Unlock all islands", "Unlocks all islands", function() local oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame for _,v in pairs(game:GetService("Workspace").islandUnlockParts:GetChildren()) do game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame wait(0.1) end wait(0.1) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcframe end) MainSection:NewToggle("Auto buy all swords", "Auto buys all swords", function(v) getgenv().buyswords = v while true do if not getgenv().buyswords then return end local A_1 = "buyAllSwords" local A_2 = "Inner Peace Island" local Event = game:GetService("Players").LocalPlayer.ninjaEvent Event:FireServer(A_1, A_2) wait(0.5) end end) MainSection:NewToggle("Auto buy all belts", "Auto buys all belts", function(v) getgenv().buybelts = v while true do if not getgenv().buybelts then return end local A_1 = "buyAllBelts" local A_2 = "Inner Peace Island" local Event = game:GetService("Players").LocalPlayer.ninjaEvent Event:FireServer(A_1, A_2) wait(0.5) end end) elseif game.PlaceId == 6276776106 then local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/SleepyThug/SleepyCode/main/Code"))() local Window = Library.CreateLib("EGX3 AUTO FARM", "Sentinel") local Main = Window:NewTab("Main") local MainSection = Main:NewSection("Main") MainSection:NewToggle("Auto farm levels", "Levels up", function(v) getgenv().levelfarm = v while true do if not getgenv().levelfarm then return end for _,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do if v:FindFirstChild("EGX3") then game.Players.LocalPlayer.Character.Humanoid:EquipTool(v) break end end local A_1 = game:GetService("Players") local Event = game:GetService("ReplicatedStorage").Remotes.ChangeLevelEvent Event:FireServer(A_1) wait(0) end end) local Player = Window:NewTab("Player") local PlayerSection = Player:NewSection("Player") PlayerSection:NewSlider("Walkspeed", "Changes the walkspeed", 250, 16, function(v) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v end) PlayerSection:NewSlider("Jumppower", "Changes the jumppower", 250, 50, function(v) game.Players.LocalPlayer.Character.Humanoid.JumpPower = v end) 
elseif game.PlaceId == 6284583030 then
local library = loadstring(game:HttpGet('https://raw.githubusercontent.com/EGX3/EGX3/main/EGX3.1'))()
local MainWindow = library:CreateWindow("AUTO FARM EGX3")
local EggsWindow = library:CreateWindow("EGGS")

local GameLibrary = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
local Network = GameLibrary.Network
local Run_Service = game:GetService("RunService")
local rs = Run_Service.RenderStepped
local CurrencyOrder = {"Halloween Candy", "Tech Coins", "Fantasy Coins", "Coins", "Diamonds",}
    local IMightKillMyselfCauseOfThis = {
        ['VIP'] = {'VIP'};
        ['Town'] = {'Town', 'Town FRONT'};
        ['Forest'] = {'Forest', 'Forest FRONT'};
        ['Beach'] = {'Beach', 'Beach FRONT'};
        ['Mine'] = {'Mine', 'Mine FRONT'};
        ['Winter'] = {'Winter', 'Winter FRONT'};
        ['Glacier'] = {'Glacier', 'Glacier Lake'};
        ['Desert'] = {'Desert', 'Desert FRONT'};
        ['Volcano'] = {'Volcano', 'Volcano FRONT'};
        ['Enchanted Forest'] = {'Enchanted Forest', 'Enchanted Forest FRONT'};
        ['Ancient'] = {'Ancient'};
        ['Samurai'] = {'Samurai', 'Samurai FRONT'};
        ['Candy'] = {'Candy'};
        ['Haunted'] = {'Haunted', 'Haunted FRONT'};
        ['Hell'] = {'Hell'};
        ['Heaven'] = {'Heaven'};
        ['Ice Tech'] = {'Ice Tech'};
        ['Tech City'] = {'Tech City'; 'Tech City FRONT'};
        ['Dark Tech'] = {'Dark Tech'; 'Dark Tech FRONT'};
        ['Steampunk'] = {'Steampunk'; 'Steampunk FRONT'};
    }
    local AreaList = { 
        'All'; 'VIP';
        'Town'; 'Forest'; 'Beach'; 'Mine'; 'Winter'; 'Glacier'; 'Desert'; 'Volcano';
        'Enchanted Forest'; 'Ancient'; 'Samurai'; 'Candy'; 'Haunted'; 'Hell'; 'Heaven';
        'Ice Tech'; 'Tech City'; 'Dark Tech'; 'Steampunk';
    }
    local Chests = {
        'All';
        "Magma Chest",
        "Enchanted Chest", "Hell Chest", "Haunted Chest", "Angel Chest", "Grand Heaven Chest",
        "Giant Tech Chest"; "Giant Steampunk Chest";
    }
workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "buy egg")
workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "join coin")
workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "farm coin")
workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "claim orbs")
workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "change pet target")
function FarmCoin(CoinID, PetID)
    game.workspace['__THINGS']['__REMOTES']["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
    game.workspace['__THINGS']['__REMOTES']["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
end
function GetMyPets()
   local returntable = {}
   for i,v in pairs(GameLibrary.Save.Get().Pets) do
       if v.e then 
           table.insert(returntable, v.uid)
       end
   end
   return returntable
end
function GetCoins(area)
    local returntable = {}
    local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
    for i,v in pairs(ListCoins) do
        if MainWindow.flags.FarmingArea == 'All' or table.find(IMightKillMyselfCauseOfThis[MainWindow.flags.FarmingArea], v.a) then
            local shit = v
            shit["index"] = i
            table.insert(returntable, shit)
         end
    end
    return returntable
end
function GetCoinTable(area)
    local CoinTable = GetCoins(area)
    function getKeysSortedByValue(tbl, sortFunction)
        local keys = {}
        for key in pairs(tbl) do
            table.insert(keys, key)
        end
        table.sort(
            keys,
            function(a, b)
                return sortFunction(tbl[a].h, tbl[b].h)
            end
        )
        return keys
    end
    local sortedKeys = getKeysSortedByValue(CoinTable, function(a, b) return a > b end)
    local newCoinTable = {}

    for i,v in pairs(sortedKeys) do
        table.insert(newCoinTable, CoinTable[v])
    end
    return newCoinTable
end
local AreaWorldTable = {}
for _, v in pairs(game:GetService("ReplicatedStorage").Game.Coins:GetChildren()) do
    for _, b in pairs(v:GetChildren()) do
        table.insert(AreaWorldTable, b.Name)
    end
    table.insert(AreaWorldTable, v.Name)
end
function AllChests()
    local returntable = {}
    local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
    for i,v in pairs(ListCoins) do
        local shit = v
        shit["index"] = i
        for aa,bb in pairs(AreaWorldTable) do
            if string.find(v.n, bb) then
                local thing = string.gsub(v.n, bb.." ", "")
                if table.find(Chests, thing) then
                    shit.n = thing
                    table.insert(returntable, shit)
                end
            end
        end
    end
    return returntable
end
if _G.MyConnection then _G.MyConnection:Disconnect() end
_G.MyConnection = game.Workspace.__THINGS.Orbs.ChildAdded:Connect(function(Orb)
    game.Workspace.__THINGS.__REMOTES["claim orbs"]:FireServer({{Orb.Name}})
end)
MainWindow:Toggle("Enable Auto Farm", {flag = 'FarmingEnabled'}, function(new)
    local CurrentFarmingPets = {}
    while rs:wait() and MainWindow.flags.FarmingEnabled do
        local pethingy = GetMyPets()
        
        if MainWindow.flags.FarmingType == 'Normal' then
            local cointhiny = GetCoins(MainWindow.flags.FarmingArea)
            for i = 1, #cointhiny do
                if MainWindow.flags.FarmingEnabled and game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(cointhiny[i].index) then
                    for _, bb in pairs(pethingy) do
                        if MainWindow.flags.FarmingEnabled and game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(cointhiny[i].index) then
                            spawn(function()
                                FarmCoin(cointhiny[i].index, bb)
                            end)
                        end
                    end
                    repeat rs:wait() until not game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(cointhiny[i].index)
                end
            end
        elseif MainWindow.flags.FarmingType == 'Chest' then
            for i,v in pairs(AllChests()) do
                if (v.n == MainWindow.flags.FarmingSingleChest) or (MainWindow.flags.FarmingSingleChest == 'All') then
                    local starttick = tick()
                    for a, b in pairs(pethingy) do
                        pcall(function() FarmCoin(v.index, b) end)
                    end
                    repeat rs:wait() until not game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(v.index) or #game:GetService("Workspace")["__THINGS"].Coins[v.index].Pets:GetChildren() == 0
                    warn(v.n .. " has been broken in", tick()-starttick)
                end
            end
        elseif MainWindow.flags.FarmingType == 'Multi Target' then
            local cointhiny = GetCoins(MainWindow.flags.FarmingArea)
            for i = 1, #cointhiny do
                if i%#pethingy == #pethingy-1 then wait() end
                if not CurrentFarmingPets[pethingy[i%#pethingy+1]] or CurrentFarmingPets[pethingy[i%#pethingy+1]] == nil then
                    spawn(function()
                        CurrentFarmingPets[pethingy[i%#pethingy+1]] = 'Farming'
                        FarmCoin(cointhiny[i].index, pethingy[i%#pethingy+1])
                        repeat rs:wait() until not game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(cointhiny[i].index) or #game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(cointhiny[i].index).Pets:GetChildren() == 0
                        CurrentFarmingPets[pethingy[i%#pethingy+1]] = nil
                    end)
                end
            end
        elseif MainWindow.flags.FarmingType == 'Highest Value' then
            local cointhiny = GetCoinTable(MainWindow.flags.FarmingArea)
            for a,b in pairs(pethingy) do
                spawn(function() FarmCoin(cointhiny[1].index, b) end)
            end
            repeat rs:wait() until not game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(cointhiny[1].index) or #game:GetService("Workspace")["__THINGS"].Coins[cointhiny[1].index].Pets:GetChildren() == 0

        elseif MainWindow.flags.FarmingType == 'Nearest' then
            local NearestOne = nil
            local NearestDistance = math.huge
            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Coins:GetChildren()) do
                if (v.POS.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < NearestDistance then
                    NearestOne = v
                    NearestDistance = (v.POS.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                end
            end
            for a,b in pairs(pethingy) do
                spawn(function() FarmCoin(NearestOne.Name, b) end)
            end
        end
    end
end)
MainWindow:Dropdown("Type", {flag = 'FarmingType', list = {'Normal', 'Chest', 'Multi Target', 'Highest Value', 'Nearest'}})
MainWindow:Dropdown("If chest", {flag = 'FarmingSingleChest', list = Chests})
MainWindow:Dropdown("Area", {flag = 'FarmingArea', list = AreaList})
MainWindow:Button("Farming Stats", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EGX3/EGX3/main/EGX3.2'))()
    wait(60)
    warn("60s has PASSED!")
end)
local MyEggData = {}
local littleuselesstable = {}
local GameLibrary = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
for i,v in pairs(GameLibrary.Directory.Eggs) do
    local temptable = {}
    temptable['Name'] = i
    temptable['Currency'] = v.currency
    temptable['Price'] = v.cost
    table.insert(MyEggData, temptable)
end
table.sort(MyEggData, function(a, b)
    return a.Price < b.Price
end)
local EggData = {}
for i,v in pairs(CurrencyOrder) do
    table.insert(EggData, " ")
    table.insert(EggData, "-- "..v.." --")
    for a,b in pairs(MyEggData) do
        if b.Currency == v then
            table.insert(EggData, b.Name)
        end
    end
end
EggsWindow:Toggle("Open Eggs", {flag = 'OpenEggs'}, function(new)
    while wait() and EggsWindow.flags.OpenEggs do
        local ohTable1 = {
            [1] = EggsWindow.flags.SelectedEgg,
            [2] = EggsWindow.flags.TripleEggs
        }
        workspace.__THINGS.__REMOTES["buy egg"]:InvokeServer(ohTable1)
    end
end)
EggsWindow:Dropdown('Egg', {flag = 'SelectedEgg', list = EggData})
EggsWindow:Toggle("Triple Eggs", {flag = 'TripleEggs'})
EggsWindow:Section("discord.gg/SyaGur2Jg7")
EggsWindow:Button("Remove Egg animation", function()
    for i,v in pairs(getgc(true)) do
        if (typeof(v) == 'table' and rawget(v, 'OpenEgg')) then
            v.OpenEgg = function()
                return
            end
        end
    end
end)
EggsWindow:Button("Gamepasses", function()
    local main = debug.getupvalues(require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library")).Save.Get)[2][game.Players.LocalPlayer].save.Gamepasses
    table.insert(main,18674296)
    table.insert(main,18674298)
    table.insert(main,18674321)
end)
local GC = getconnections or get_signal_cons
if GC then
    for i,v in pairs(GC(game.Players.LocalPlayer.Idled)) do
        if v["Disable"] then
            v["Disable"](v)
        elseif v["Disconnect"] then
            v["Disconnect"](v)
        end
    end
else
    print("EGX3 CLAN")
    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end
warnsa("EGX3 CLAN")
end
